openapi: 3.0.3
info:
  version: "1.0.0"
  title: "RaedOnly and WriteOnly Testcase "
paths:
  /read-write:
    post:
      summary: "Request doesn't show the read-only and Response doesn't show write-only"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                holder:
                  $ref: '#/components/schemas/Holder'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Holder'

components:
  schemas:
    Holder:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        others:
          $ref: '#/components/schemas/other'
    other:
      type: object
      required:
        - obj-regular
      properties:
        primitive:
          type: integer
        primitive-readonly:
          readOnly: true
          type: integer
        obj-regular:
          type: object
          properties:
            obj-prop1:
              type: integer
            obj-prop2:
              type: integer
            obj-prop-readonly:
              readOnly: true
              type: integer
            obj-prop-writeonly:
              writeOnly: true
              type: integer
        primitive-writeonly:
          writeOnly: true
          type: integer
        obj-readonly:
          type: object
          readOnly: true
          properties:
            c1:
              type: integer
            c2:
              type: integer
        obj-writeonly:
          type: object
          writeOnly: true
          properties:
            d1:
              type: integer
            d2:
              type: integer
        arr-readonly:
          type: array
          readOnly: true
          items:
            type: string
        arr-writeonly:
          type: array
          writeOnly: true
          items:
            type: string
        g:
          type: integer