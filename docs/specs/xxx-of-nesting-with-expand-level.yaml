openapi: 3.0.3
info:
  title: One Of Nesting with Schema Expand level
  description: >
    this test case demonstrate covers the following scenarios
    - nesting of `one-of`, `any-of`
    - nested `one-of` contains 
      - only primitive data type options
      - mix of primitive and object data type options
    - schema-exapand-level attribute must play nice with nesting of `one-of` and `any-of`
  version: 1.0.0
servers:
  - url: 'http://localhost:9000'
    description: Local server
paths:
  /nested-xxx-of:
    get:
      parameters:
        - name: env
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      rootLevel:
                        allOf:
                        - type: object
                        - anyOf:
                          - type: object
                            properties:
                              L1_A:
                                type: string
                              L1_B:
                                type: number
                              L1_C:
                                type: object
                                properties:
                                  L2_C1:
                                    type: string
                                  L2_C2:
                                    type: string
                                  L2_C3:
                                    oneOf:
                                      - type: string
                                      - type: number
                                      - type: object
                                        properties:
                                          L3_C3_A:
                                            type: string
                                          L3_C3_B:
                                            type: string
                                  L2_C4:
                                    oneOf:
                                      - type: string
                                      - type: number
                          - type: object
                            properties:
                              L1_X: 
                                type: number
